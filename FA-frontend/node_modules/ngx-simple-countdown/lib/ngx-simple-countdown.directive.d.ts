import { ElementRef, OnDestroy, OnInit, EventEmitter } from '@angular/core';
import { Observable } from 'rxjs';
import { CountdownResult, CountdownKeywords } from './models';
import * as i0 from "@angular/core";
export declare class NgxSimpleCountdownDirective implements OnInit, OnDestroy {
    private elementRef;
    dateTo: number;
    endMessage: string;
    language: string;
    reactive: boolean;
    styles: string;
    finish: EventEmitter<void>;
    countdownResult: CountdownResult;
    dateNow: number;
    interval$: Observable<number>;
    keywords: CountdownKeywords;
    totalSecondes: number;
    constructor(elementRef: ElementRef);
    ngOnInit(): void;
    ngOnDestroy(): void;
    private initSimpleCountdown;
    private createHTML;
    private updateSimpleCountdown;
    private componentDestroyed;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgxSimpleCountdownDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgxSimpleCountdownDirective, "[simpleCountdown]", never, { "dateTo": "dateTo"; "endMessage": "endMessage"; "language": "language"; "reactive": "reactive"; "styles": "styles"; }, { "finish": "finish"; }, never>;
}
